//Binary search

class Solution {
public:
    int search(vector<int>& nums, int target) {
        int low = 0; int high = nums.size()-1;
    
        while(low<=high){
            int mid = (high+low)/2; 
            if(nums[mid]==target) return mid;
         else if(nums[mid]<target) low=mid+1;
        else  high = mid-1;
        
        } return -1;
    }
};
// Recursive Approach for this:

void recurBin(int arr, int low,int high, int target){
    if(low>high) return -1;
    mid = (low+high)/2;
    if(arr[mid] ==target) return mid;
    else if(target>arr[mid]) {
        recurBin(arr,mid+1,high,target);
    }
   return recurBin(arr,low,mid-1;target);
    
}
