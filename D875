875. Koko Eating Bananas:
class Solution {
public:


int findMax(vector<int>& piles){
    int max = 0;
    for(int i=0;i<piles.size();i++){
            if(piles[i]>max) max = piles[i];
        } return max;
}
long calculateTotalHours(vector<int>& piles, long k){
    long totalhr = 0;
    for(int i=0;i<piles.size();i++){
        totalhr += ceil((double)(piles[i])/(double)(k));
           
    } return totalhr;
}
    int minEatingSpeed(vector<int>& piles, int h) {  
        long start = 1; long end = findMax(piles);
        while(start<=end){
            long mid = start+(end-start)/2;
            long total = calculateTotalHours(piles,mid); 
            if(total<=h) end = mid-1;
           else start=mid+1;
            
        } return (int)start;
    }
};
